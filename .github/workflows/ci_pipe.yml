name: CI Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:
    branches:
      - master

jobs:

  php_checks:
    name: PHP Syntax Checks
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: PHP Syntax Checks
        run: make phpcheck -B

  php_min:
    name: PHP 7.4 Compatibility
    needs: php_checks
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: make dev -B

      - name: PHP Compatibility Checks
        run: make phpmin -B

  # ------------------------------------------------------------------------------------------------------------------------

  phpunit:
    name: PHP Unit Tests | PHP ${{ matrix.php }}
    needs: php_min
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '7.4' ]
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Install Dependencies
        run: make dev -B

      - name: Run PHPUnit
        run: make phpunit -B

  phpstan:
    name: Static Analyzers
    needs: phpunit
    runs-on: ubuntu-latest
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: make dev -B

      - name: Run PHPStan
        run: make stan -B

  phpcsfixer:
    name: PHP CS Fixer
    needs: phpstan
    runs-on: ubuntu-latest
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: make dev -B

      - name: Run PHP CS Fixer
        run: make csfix -B

  jest:
    name: Jest Unit Tests
    needs: phpcsfixer
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: make dev -B

      - name: Run Jest
        run: make jest -B

  eslint:
    name: ESLint
    needs: phpunit
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: make dev -B

      - name: Run ESLint
        run: make eslint -B

  # ------------------------------------------------------------------------------------------------------------------------

  e2e:
    name: E2E Tests | Shopware ${{ matrix.shopware }}
    needs: eslint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shopware: [ '6.4.4.0' ]
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: make install -B

      - name: Start Docker
        run: |
          docker run --rm -p 80:80 --name shop -d dockware/dev:${{ matrix.shopware }}
          sleep 30
          docker logs shop

      - name: Upload into Docker
        run: |
          docker cp $(pwd)/. shop:/var/www/html/custom/plugins/DemoPlugin
          docker exec shop bash -c 'sudo chown www-data:www-data /var/www/html/custom/plugins -R'

      - name: Install Plugin
        run: |
          docker exec shop bash -c 'php bin/console plugin:refresh'
          docker exec shop bash -c 'php bin/console plugin:install DemoPlugin --activate'

      - name: Build artifacts
        run: |
          docker exec shop bash -c './bin/build-js.sh'
          docker exec shop bash -c 'php bin/console theme:refresh'
          docker exec shop bash -c 'php bin/console theme:compile'
          docker exec shop bash -c 'php bin/console theme:refresh'

      - name: Reinstall Plugin
        run: |
          docker exec shop bash -c 'php bin/console plugin:refresh'
          docker exec shop bash -c 'php bin/console plugin:deactivate DemoPlugin'
          docker exec shop bash -c 'php bin/console plugin:activate DemoPlugin'
          docker exec shop bash -c 'php bin/console cache:clear'

      - name: Install Cypress
        run: cd tests/Cypress && make install -B

      - name: Start Cypress
        run: cd tests/Cypress && make run shopware=$SW_VERSION url=http://localhost
        env:
          SW_VERSION: ${{ matrix.shopware }}

      - name: Download Logs
        if: ${{ always() }}
        run: |
          mkdir -p $(pwd)/tests/Cypress/cypress/logs/shopware
          mkdir -p $(pwd)/tests/Cypress/cypress/logs/apache
          docker cp shop:/var/www/html/var/log/. $(pwd)/tests/Cypress/cypress/logs/shopware
          docker cp shop:/var/log/php/. $(pwd)/tests/Cypress/cypress/logs/apache

      - name: Store Cypress Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress_results_sw_v${{ matrix.shopware }}
          retention-days: 1
          path: |
            tests/Cypress/cypress/logs
            tests/Cypress/cypress/videos
            tests/Cypress/cypress/screenshots
